basePath: /api
definitions:
  models.CreateEvent:
    properties:
      campaign_id:
        type: string
      meta:
        $ref: '#/definitions/models.JSONB'
      name:
        type: string
      payload:
        $ref: '#/definitions/models.JSONB'
      url:
        type: string
      visitor_id:
        type: string
    required:
    - name
    - url
    - visitor_id
    type: object
  models.CreateFaculty:
    properties:
      about:
        type: string
      academic_requirements:
        type: string
      apply_date:
        type: string
      budget:
        type: integer
      domains:
        items:
          type: string
        type: array
      duration:
        type: number
      language_requirements:
        type: string
      name:
        type: string
      other_requirements:
        type: string
      start_date:
        type: string
    required:
    - budget
    - domains
    - name
    type: object
  models.CreateUniversity:
    properties:
      about:
        type: string
      city:
        type: string
      country:
        type: string
      img_link:
        type: string
      name:
        type: string
      ranking:
        type: string
    required:
    - country
    - img_link
    - name
    type: object
  models.Event:
    properties:
      campaign_id:
        type: string
      created_at:
        type: string
      id:
        type: string
      meta:
        $ref: '#/definitions/models.JSONB'
      name:
        type: string
      payload:
        $ref: '#/definitions/models.JSONB'
      updated_at:
        type: string
      url:
        type: string
      visitor_id:
        type: string
    type: object
  models.Faculty:
    properties:
      about:
        type: string
      academic_requirements:
        type: string
      apply_date:
        type: string
      budget:
        type: integer
      created_at:
        type: string
      domains:
        items:
          type: string
        type: array
      duration:
        type: number
      id:
        type: string
      language_requirements:
        type: string
      name:
        type: string
      other_requirements:
        type: string
      start_date:
        type: string
      university:
        $ref: '#/definitions/models.University'
      university_id:
        type: string
      updated_at:
        type: string
    type: object
  models.JSONB:
    additionalProperties: true
    type: object
  models.LoginUser:
    properties:
      email:
        type: string
      password:
        maxLength: 50
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  models.RegisterUser:
    properties:
      email:
        type: string
      name:
        maxLength: 50
        minLength: 3
        type: string
      password:
        type: string
      visitor_id:
        type: string
    required:
    - email
    - name
    type: object
  models.Token:
    properties:
      token:
        type: string
    type: object
  models.University:
    properties:
      about:
        type: string
      city:
        type: string
      country:
        type: string
      created_at:
        type: string
      faculties:
        items:
          $ref: '#/definitions/models.Faculty'
        type: array
      id:
        type: string
      img_link:
        type: string
      name:
        type: string
      ranking:
        type: string
      updated_at:
        type: string
    type: object
  models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      roles:
        items:
          type: string
        type: array
      updated_at:
        type: string
      visitor_id:
        type: string
    type: object
info:
  contact: {}
  description: This is the API for the Easy-Uni application.
  title: Easy-Uni API
paths:
  /events:
    get:
      consumes:
      - application/json
      description: get all events
      parameters:
      - in: query
        name: page
        type: integer
      - in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Event'
            type: array
      tags:
      - events
    post:
      consumes:
      - application/json
      description: create event
      parameters:
      - description: Event
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/models.CreateEvent'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Event'
      tags:
      - events
  /events/{event_id}:
    delete:
      consumes:
      - application/json
      description: delete event
      parameters:
      - description: Event ID
        in: path
        name: event_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - ApiKeyAuth: []
      tags:
      - events
    get:
      consumes:
      - application/json
      description: get event by id
      parameters:
      - description: Event ID
        in: path
        name: event_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Event'
      tags:
      - events
  /faculties:
    get:
      consumes:
      - application/json
      description: get faculty by name, country, city, domain, budget
      parameters:
      - in: query
        name: budget
        type: integer
      - in: query
        name: city
        type: string
      - in: query
        name: country
        type: string
      - in: query
        name: domain
        type: string
      - in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Faculty'
            type: array
      tags:
      - faculties
  /faculties/{faculty_id}:
    delete:
      consumes:
      - application/json
      description: delete faculty
      parameters:
      - description: Faculty ID
        in: path
        name: faculty_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Faculty deleted successfully
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      tags:
      - faculties
    get:
      consumes:
      - application/json
      description: get faculty by id
      parameters:
      - description: Faculty ID
        in: path
        name: faculty_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Faculty'
      tags:
      - faculties
    put:
      consumes:
      - application/json
      description: update faculty
      parameters:
      - description: Faculty ID
        in: path
        name: faculty_id
        required: true
        type: string
      - description: Faculty
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.CreateFaculty'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Faculty'
      security:
      - ApiKeyAuth: []
      tags:
      - faculties
  /faculties/{university_id}:
    post:
      consumes:
      - application/json
      description: create faculty
      parameters:
      - description: University ID
        in: path
        name: university_id
        required: true
        type: string
      - description: Faculty
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.CreateFaculty'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Faculty'
      security:
      - ApiKeyAuth: []
      tags:
      - faculties
  /universities:
    get:
      consumes:
      - application/json
      description: get university by name, country, city
      parameters:
      - in: query
        name: city
        type: string
      - in: query
        name: country
        type: string
      - in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.University'
            type: array
      tags:
      - universities
    post:
      consumes:
      - application/json
      description: create university
      parameters:
      - description: University
        in: body
        name: university
        required: true
        schema:
          $ref: '#/definitions/models.CreateUniversity'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.University'
      security:
      - ApiKeyAuth: []
      tags:
      - universities
  /universities/{university_id}:
    delete:
      consumes:
      - application/json
      description: delete university
      parameters:
      - description: University ID
        in: path
        name: university_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: University deleted successfully
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      tags:
      - universities
    get:
      consumes:
      - application/json
      description: get university by id
      parameters:
      - description: University ID
        in: path
        name: university_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.University'
      tags:
      - universities
    put:
      consumes:
      - application/json
      description: update university
      parameters:
      - description: University ID
        in: path
        name: university_id
        required: true
        type: string
      - description: University
        in: body
        name: university
        required: true
        schema:
          $ref: '#/definitions/models.CreateUniversity'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.University'
      security:
      - ApiKeyAuth: []
      tags:
      - universities
  /users:
    get:
      consumes:
      - application/json
      description: get all users
      parameters:
      - in: query
        name: page
        type: integer
      - in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
      tags:
      - users
  /users/{user_id}:
    get:
      consumes:
      - application/json
      description: get user by id
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      tags:
      - users
  /users/current:
    get:
      consumes:
      - application/json
      description: get current user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      security:
      - ApiKeyAuth: []
      tags:
      - users
  /users/login:
    post:
      consumes:
      - application/json
      description: login user
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.LoginUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Token'
      tags:
      - users
  /users/register:
    post:
      consumes:
      - application/json
      description: register user
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.RegisterUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Token'
      tags:
      - users
schemes:
- http
- https
securityDefinitions:
  ApiKeyAuth:
    description: Type "bearer" followed by a space and JWT token
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
